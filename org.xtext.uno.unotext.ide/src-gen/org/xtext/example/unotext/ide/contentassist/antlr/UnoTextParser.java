/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.unotext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.unotext.ide.contentassist.antlr.internal.InternalUnoTextParser;
import org.xtext.example.unotext.services.UnoTextGrammarAccess;

public class UnoTextParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(UnoTextGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, UnoTextGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getUno_RuleAccess().getAlternatives(), "rule__Uno_Rule__Alternatives");
			builder.put(grammarAccess.getNombreJoueursAccess().getAlternatives_1(), "rule__NombreJoueurs__Alternatives_1");
			builder.put(grammarAccess.getSpecialCardAccess().getAlternatives_1(), "rule__SpecialCard__Alternatives_1");
			builder.put(grammarAccess.getGameOverAccess().getAlternatives_1(), "rule__GameOver__Alternatives_1");
			builder.put(grammarAccess.getFinMancheAccess().getAlternatives_1(), "rule__FinManche__Alternatives_1");
			builder.put(grammarAccess.getSuiteAccess().getAlternatives(), "rule__Suite__Alternatives");
			builder.put(grammarAccess.getUnoAccess().getGroup(), "rule__Uno__Group__0");
			builder.put(grammarAccess.getNombreJoueursAccess().getGroup(), "rule__NombreJoueurs__Group__0");
			builder.put(grammarAccess.getUno_ClassicAccess().getGroup(), "rule__Uno_Classic__Group__0");
			builder.put(grammarAccess.getSpecialCardAccess().getGroup(), "rule__SpecialCard__Group__0");
			builder.put(grammarAccess.getGameOverAccess().getGroup(), "rule__GameOver__Group__0");
			builder.put(grammarAccess.getFinMancheAccess().getGroup(), "rule__FinManche__Group__0");
			builder.put(grammarAccess.getCarteIdentiqueAccess().getGroup(), "rule__CarteIdentique__Group__0");
			builder.put(grammarAccess.getCumulAjoutAccess().getGroup(), "rule__CumulAjout__Group__0");
			builder.put(grammarAccess.getSuiteAccess().getGroup_0(), "rule__Suite__Group_0__0");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getGroup(), "rule__UnoOlypique__Group__0");
			builder.put(grammarAccess.getUnoWizzAccess().getGroup(), "rule__UnoWizz__Group__0");
			builder.put(grammarAccess.getUnoRapidoAccess().getGroup(), "rule__UnoRapido__Group__0");
			builder.put(grammarAccess.getUnoAccess().getUnoAssignment_0(), "rule__Uno__UnoAssignment_0");
			builder.put(grammarAccess.getUnoAccess().getNombreJoueurAssignment_1(), "rule__Uno__NombreJoueurAssignment_1");
			builder.put(grammarAccess.getUno_ClassicAccess().getUnoChallengeAssignment_1(), "rule__Uno_Classic__UnoChallengeAssignment_1");
			builder.put(grammarAccess.getUno_ClassicAccess().getCarte0_7Assignment_2(), "rule__Uno_Classic__Carte0_7Assignment_2");
			builder.put(grammarAccess.getUno_ClassicAccess().getCarteIdentiqueAssignment_3(), "rule__Uno_Classic__CarteIdentiqueAssignment_3");
			builder.put(grammarAccess.getUno_ClassicAccess().getCumulAjoutAssignment_4(), "rule__Uno_Classic__CumulAjoutAssignment_4");
			builder.put(grammarAccess.getUno_ClassicAccess().getSuiteAssignment_5(), "rule__Uno_Classic__SuiteAssignment_5");
			builder.put(grammarAccess.getUno_ClassicAccess().getPiocheAssignment_6(), "rule__Uno_Classic__PiocheAssignment_6");
			builder.put(grammarAccess.getUno_ClassicAccess().getMore4Assignment_7(), "rule__Uno_Classic__More4Assignment_7");
			builder.put(grammarAccess.getUno_ClassicAccess().getTempsLimiteAssignment_8(), "rule__Uno_Classic__TempsLimiteAssignment_8");
			builder.put(grammarAccess.getUno_ClassicAccess().getMauvaiseCarteAssignment_9(), "rule__Uno_Classic__MauvaiseCarteAssignment_9");
			builder.put(grammarAccess.getUno_ClassicAccess().getEquipeAssignment_10(), "rule__Uno_Classic__EquipeAssignment_10");
			builder.put(grammarAccess.getUno_ClassicAccess().getCarteVisiblesAssignment_11(), "rule__Uno_Classic__CarteVisiblesAssignment_11");
			builder.put(grammarAccess.getUno_ClassicAccess().getFinMancheAssignment_12(), "rule__Uno_Classic__FinMancheAssignment_12");
			builder.put(grammarAccess.getUno_ClassicAccess().getThreeHandsAssignment_13(), "rule__Uno_Classic__ThreeHandsAssignment_13");
			builder.put(grammarAccess.getUno_ClassicAccess().getThreePilesAssignment_14(), "rule__Uno_Classic__ThreePilesAssignment_14");
			builder.put(grammarAccess.getUno_ClassicAccess().getSpecialCardAssignment_15(), "rule__Uno_Classic__SpecialCardAssignment_15");
			builder.put(grammarAccess.getUno_ClassicAccess().getGameOverAssignment_16(), "rule__Uno_Classic__GameOverAssignment_16");
			builder.put(grammarAccess.getCarteIdentiqueAccess().getAvecCouleurAssignment_1(), "rule__CarteIdentique__AvecCouleurAssignment_1");
			builder.put(grammarAccess.getCumulAjoutAccess().getPlus2Assignment_1(), "rule__CumulAjout__Plus2Assignment_1");
			builder.put(grammarAccess.getCumulAjoutAccess().getPlus4Assignment_2(), "rule__CumulAjout__Plus4Assignment_2");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getTribunalPopulaireAssignment_1(), "rule__UnoOlypique__TribunalPopulaireAssignment_1");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getDistributionAleatoireAssignment_2(), "rule__UnoOlypique__DistributionAleatoireAssignment_2");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getSensDefiniAssignment_3(), "rule__UnoOlypique__SensDefiniAssignment_3");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getChangementDonneurAssignment_4(), "rule__UnoOlypique__ChangementDonneurAssignment_4");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getVueDesCartesApres1erPoseAssignment_5(), "rule__UnoOlypique__VueDesCartesApres1erPoseAssignment_5");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getDonneurPremieroseAssignment_6(), "rule__UnoOlypique__DonneurPremieroseAssignment_6");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getJeuRapideAssignment_7(), "rule__UnoOlypique__JeuRapideAssignment_7");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getInterceptionAssignment_8(), "rule__UnoOlypique__InterceptionAssignment_8");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getDeuxCartesIdentiquesAssignment_9(), "rule__UnoOlypique__DeuxCartesIdentiquesAssignment_9");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getDecisionCarteAssignment_10(), "rule__UnoOlypique__DecisionCarteAssignment_10");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getSurenchereAssignment_11(), "rule__UnoOlypique__SurenchereAssignment_11");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getCartezeroAssignment_12(), "rule__UnoOlypique__CartezeroAssignment_12");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getCarteSeptAssignment_13(), "rule__UnoOlypique__CarteSeptAssignment_13");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getCarte2Assignment_14(), "rule__UnoOlypique__Carte2Assignment_14");
			builder.put(grammarAccess.getUnoOlypiqueAccess().getValeurCarteAssignment_15(), "rule__UnoOlypique__ValeurCarteAssignment_15");
			builder.put(grammarAccess.getUnoWizzAccess().getPresquUnoAssignment_1(), "rule__UnoWizz__PresquUnoAssignment_1");
			builder.put(grammarAccess.getUnoWizzAccess().getChiffreMoinsAssignment_2(), "rule__UnoWizz__ChiffreMoinsAssignment_2");
			builder.put(grammarAccess.getUnoWizzAccess().getCouleurMoinsAssignment_3(), "rule__UnoWizz__CouleurMoinsAssignment_3");
			builder.put(grammarAccess.getUnoWizzAccess().getCarteRougeAssignment_4(), "rule__UnoWizz__CarteRougeAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private UnoTextGrammarAccess grammarAccess;

	@Override
	protected InternalUnoTextParser createParser() {
		InternalUnoTextParser result = new InternalUnoTextParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public UnoTextGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(UnoTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}

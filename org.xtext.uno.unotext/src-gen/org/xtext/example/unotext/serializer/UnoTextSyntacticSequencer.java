/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.unotext.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.unotext.services.UnoTextGrammarAccess;

@SuppressWarnings("all")
public class UnoTextSyntacticSequencer extends AbstractSyntacticSequencer {

	protected UnoTextGrammarAccess grammarAccess;
	protected AbstractElementAlias match_CarteIdentique_CarteIdentiQUEKeyword_0_p;
	protected AbstractElementAlias match_CumulAjout_CumulAjoutKeyword_0_p;
	protected AbstractElementAlias match_UnoOlypique_UnoOlympiqueKeyword_0_p;
	protected AbstractElementAlias match_UnoWizz_CarteBleueKeyword_5_p;
	protected AbstractElementAlias match_UnoWizz_EchangeKeyword_6_p;
	protected AbstractElementAlias match_UnoWizz_MainVisibleKeyword_7_p;
	protected AbstractElementAlias match_UnoWizz_UnoWizzKeyword_0_p;
	protected AbstractElementAlias match_UnoWizz_UnoWizzKeyword_8_p;
	protected AbstractElementAlias match_Uno_Classic_UnoClassicKeyword_0_p;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (UnoTextGrammarAccess) access;
		match_CarteIdentique_CarteIdentiQUEKeyword_0_p = new TokenAlias(true, false, grammarAccess.getCarteIdentiqueAccess().getCarteIdentiQUEKeyword_0());
		match_CumulAjout_CumulAjoutKeyword_0_p = new TokenAlias(true, false, grammarAccess.getCumulAjoutAccess().getCumulAjoutKeyword_0());
		match_UnoOlypique_UnoOlympiqueKeyword_0_p = new TokenAlias(true, false, grammarAccess.getUnoOlypiqueAccess().getUnoOlympiqueKeyword_0());
		match_UnoWizz_CarteBleueKeyword_5_p = new TokenAlias(true, false, grammarAccess.getUnoWizzAccess().getCarteBleueKeyword_5());
		match_UnoWizz_EchangeKeyword_6_p = new TokenAlias(true, false, grammarAccess.getUnoWizzAccess().getEchangeKeyword_6());
		match_UnoWizz_MainVisibleKeyword_7_p = new TokenAlias(true, false, grammarAccess.getUnoWizzAccess().getMainVisibleKeyword_7());
		match_UnoWizz_UnoWizzKeyword_0_p = new TokenAlias(true, false, grammarAccess.getUnoWizzAccess().getUnoWizzKeyword_0());
		match_UnoWizz_UnoWizzKeyword_8_p = new TokenAlias(true, false, grammarAccess.getUnoWizzAccess().getUnoWizzKeyword_8());
		match_Uno_Classic_UnoClassicKeyword_0_p = new TokenAlias(true, false, grammarAccess.getUno_ClassicAccess().getUnoClassicKeyword_0());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getFinMancheRule())
			return getFinMancheToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSpecialCardRule())
			return getSpecialCardToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSuiteRule())
			return getSuiteToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getUnoRapidoRule())
			return getUnoRapidoToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * FinManche:
	 * 	"FinManche : "
	 * 	+ ("Reste1Carte" | "Aumoins4CartesMemeChiffre")
	 * ;
	 */
	protected String getFinMancheToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "FinManche :  Reste1Carte";
	}
	
	/**
	 * SpecialCard:
	 * 	"SpecialCard : " + ("Roulette" | "Showdown" | "Classique")
	 * ;
	 */
	protected String getSpecialCardToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "SpecialCard :  Roulette";
	}
	
	/**
	 * Suite:
	 * 	"Suite : "
	 * 	+ "Simple" | "Royale"
	 * ;
	 */
	protected String getSuiteToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Suite :  Simple";
	}
	
	/**
	 * UnoRapido:
	 * 	"UnoRapido"
	 * 	+ "Pioche"
	 * 	+ "Confusion"
	 * 	+ "Defense"
	 * 	+ "Rapido"
	 * 	+ "CarteUno"
	 * ;
	 */
	protected String getUnoRapidoToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "UnoRapido Pioche Confusion Defense Rapido CarteUno";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_CarteIdentique_CarteIdentiQUEKeyword_0_p.equals(syntax))
				emit_CarteIdentique_CarteIdentiQUEKeyword_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CumulAjout_CumulAjoutKeyword_0_p.equals(syntax))
				emit_CumulAjout_CumulAjoutKeyword_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnoOlypique_UnoOlympiqueKeyword_0_p.equals(syntax))
				emit_UnoOlypique_UnoOlympiqueKeyword_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnoWizz_CarteBleueKeyword_5_p.equals(syntax))
				emit_UnoWizz_CarteBleueKeyword_5_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnoWizz_EchangeKeyword_6_p.equals(syntax))
				emit_UnoWizz_EchangeKeyword_6_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnoWizz_MainVisibleKeyword_7_p.equals(syntax))
				emit_UnoWizz_MainVisibleKeyword_7_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnoWizz_UnoWizzKeyword_0_p.equals(syntax))
				emit_UnoWizz_UnoWizzKeyword_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnoWizz_UnoWizzKeyword_8_p.equals(syntax))
				emit_UnoWizz_UnoWizzKeyword_8_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Uno_Classic_UnoClassicKeyword_0_p.equals(syntax))
				emit_Uno_Classic_UnoClassicKeyword_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'CarteIdentiQUE'+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_CarteIdentique_CarteIdentiQUEKeyword_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'CumulAjout'+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_CumulAjout_CumulAjoutKeyword_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'UnoOlympique : '+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TribunalPopulaire='TribunalPopulaire'
	 */
	protected void emit_UnoOlypique_UnoOlympiqueKeyword_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'carteBleue'+
	 *
	 * This ambiguous syntax occurs at:
	 *     carteRouge='carteRouge' (ambiguity) 'echange'+ 'mainVisible'+ 'unoWizz'+ 'War' (rule end)
	 */
	protected void emit_UnoWizz_CarteBleueKeyword_5_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'echange'+
	 *
	 * This ambiguous syntax occurs at:
	 *     carteRouge='carteRouge' 'carteBleue'+ (ambiguity) 'mainVisible'+ 'unoWizz'+ 'War' (rule end)
	 */
	protected void emit_UnoWizz_EchangeKeyword_6_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'mainVisible'+
	 *
	 * This ambiguous syntax occurs at:
	 *     carteRouge='carteRouge' 'carteBleue'+ 'echange'+ (ambiguity) 'unoWizz'+ 'War' (rule end)
	 */
	protected void emit_UnoWizz_MainVisibleKeyword_7_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'UnoWizz : '+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) presquUno='presquUno,'
	 */
	protected void emit_UnoWizz_UnoWizzKeyword_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'unoWizz'+
	 *
	 * This ambiguous syntax occurs at:
	 *     carteRouge='carteRouge' 'carteBleue'+ 'echange'+ 'mainVisible'+ (ambiguity) 'War' (rule end)
	 */
	protected void emit_UnoWizz_UnoWizzKeyword_8_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Uno Classic : '+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) carte0_7?='Carte0_7'
	 *     (rule start) (ambiguity) carteIdentique?=CarteIdentique
	 *     (rule start) (ambiguity) cumulAjout?=CumulAjout
	 *     (rule start) (ambiguity) unoChallenge?='UnoChallenge'
	 */
	protected void emit_Uno_Classic_UnoClassicKeyword_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}

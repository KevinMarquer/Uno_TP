/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.unotext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UnoTextGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class UnoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.Uno");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cUnoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cUnoUno_RuleParserRuleCall_0_0 = (RuleCall)cUnoAssignment_0.eContents().get(0);
		private final Assignment cNombreJoueurAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNombreJoueurNombreJoueursParserRuleCall_1_0 = (RuleCall)cNombreJoueurAssignment_1.eContents().get(0);
		
		//Uno:
		//	uno+=Uno_Rule nombreJoueur+=NombreJoueurs;
		@Override public ParserRule getRule() { return rule; }
		
		//uno+=Uno_Rule nombreJoueur+=NombreJoueurs
		public Group getGroup() { return cGroup; }
		
		//uno+=Uno_Rule
		public Assignment getUnoAssignment_0() { return cUnoAssignment_0; }
		
		//Uno_Rule
		public RuleCall getUnoUno_RuleParserRuleCall_0_0() { return cUnoUno_RuleParserRuleCall_0_0; }
		
		//nombreJoueur+=NombreJoueurs
		public Assignment getNombreJoueurAssignment_1() { return cNombreJoueurAssignment_1; }
		
		//NombreJoueurs
		public RuleCall getNombreJoueurNombreJoueursParserRuleCall_1_0() { return cNombreJoueurNombreJoueursParserRuleCall_1_0; }
	}
	public class Uno_RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.Uno_Rule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUno_ClassicParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnoOlypiqueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUnoWizzParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUnoRapidoParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Uno_Rule:
		//	Uno_Classic | UnoOlypique | UnoWizz | UnoRapido;
		@Override public ParserRule getRule() { return rule; }
		
		//Uno_Classic | UnoOlypique | UnoWizz | UnoRapido
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Uno_Classic
		public RuleCall getUno_ClassicParserRuleCall_0() { return cUno_ClassicParserRuleCall_0; }
		
		//UnoOlypique
		public RuleCall getUnoOlypiqueParserRuleCall_1() { return cUnoOlypiqueParserRuleCall_1; }
		
		//UnoWizz
		public RuleCall getUnoWizzParserRuleCall_2() { return cUnoWizzParserRuleCall_2; }
		
		//UnoRapido
		public RuleCall getUnoRapidoParserRuleCall_3() { return cUnoRapidoParserRuleCall_3; }
	}
	public class NombreJoueursElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.NombreJoueurs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNombreDeJoueurKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cDeuxParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Keyword cTroisKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cQuatreKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		private final Keyword cCinqKeyword_1_3 = (Keyword)cAlternatives_1.eContents().get(3);
		private final Keyword cSixKeyword_1_4 = (Keyword)cAlternatives_1.eContents().get(4);
		private final Keyword cSeptKeyword_1_5 = (Keyword)cAlternatives_1.eContents().get(5);
		private final Keyword cHuitKeyword_1_6 = (Keyword)cAlternatives_1.eContents().get(6);
		
		//NombreJoueurs:
		//	'Nombre de joueur : '+ (Deux | "Trois" | "Quatre" | "Cinq" | "Six" | "Sept" | "Huit");
		@Override public ParserRule getRule() { return rule; }
		
		//'Nombre de joueur : '+ (Deux | "Trois" | "Quatre" | "Cinq" | "Six" | "Sept" | "Huit")
		public Group getGroup() { return cGroup; }
		
		//'Nombre de joueur : '+
		public Keyword getNombreDeJoueurKeyword_0() { return cNombreDeJoueurKeyword_0; }
		
		//(Deux | "Trois" | "Quatre" | "Cinq" | "Six" | "Sept" | "Huit")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//Deux
		public RuleCall getDeuxParserRuleCall_1_0() { return cDeuxParserRuleCall_1_0; }
		
		//"Trois"
		public Keyword getTroisKeyword_1_1() { return cTroisKeyword_1_1; }
		
		//"Quatre"
		public Keyword getQuatreKeyword_1_2() { return cQuatreKeyword_1_2; }
		
		//"Cinq"
		public Keyword getCinqKeyword_1_3() { return cCinqKeyword_1_3; }
		
		//"Six"
		public Keyword getSixKeyword_1_4() { return cSixKeyword_1_4; }
		
		//"Sept"
		public Keyword getSeptKeyword_1_5() { return cSeptKeyword_1_5; }
		
		//"Huit"
		public Keyword getHuitKeyword_1_6() { return cHuitKeyword_1_6; }
	}
	public class DeuxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.Deux");
		private final Keyword cDeuxInverserPasser_TourKeyword = (Keyword)rule.eContents().get(1);
		
		//Deux:
		//	"Deux : Inverser/Passer_Tour";
		@Override public ParserRule getRule() { return rule; }
		
		//"Deux : Inverser/Passer_Tour"
		public Keyword getDeuxInverserPasser_TourKeyword() { return cDeuxInverserPasser_TourKeyword; }
	}
	public class Uno_ClassicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.Uno_Classic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnoClassicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUnoChallengeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cUnoChallengeUnoChallengeKeyword_1_0 = (Keyword)cUnoChallengeAssignment_1.eContents().get(0);
		private final Assignment cCarte0_7Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cCarte0_7Carte0_7Keyword_2_0 = (Keyword)cCarte0_7Assignment_2.eContents().get(0);
		private final Assignment cCarteIdentiqueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCarteIdentiqueCarteIdentiqueParserRuleCall_3_0 = (RuleCall)cCarteIdentiqueAssignment_3.eContents().get(0);
		private final Assignment cCumulAjoutAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCumulAjoutCumulAjoutParserRuleCall_4_0 = (RuleCall)cCumulAjoutAssignment_4.eContents().get(0);
		private final Assignment cSuiteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSuiteSuiteParserRuleCall_5_0 = (RuleCall)cSuiteAssignment_5.eContents().get(0);
		private final Assignment cPiocheAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cPiochePiocheKeyword_6_0 = (Keyword)cPiocheAssignment_6.eContents().get(0);
		private final Assignment cMore4Assignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cMore4More4Keyword_7_0 = (Keyword)cMore4Assignment_7.eContents().get(0);
		private final Assignment cTempsLimiteAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cTempsLimiteTempsLimiteKeyword_8_0 = (Keyword)cTempsLimiteAssignment_8.eContents().get(0);
		private final Assignment cMauvaiseCarteAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cMauvaiseCarteMauvaiseCarteKeyword_9_0 = (Keyword)cMauvaiseCarteAssignment_9.eContents().get(0);
		private final Assignment cEquipeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cEquipeEquipeKeyword_10_0 = (Keyword)cEquipeAssignment_10.eContents().get(0);
		private final Assignment cCarteVisiblesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final Keyword cCarteVisiblesCarteVisiblesKeyword_11_0 = (Keyword)cCarteVisiblesAssignment_11.eContents().get(0);
		private final Assignment cFinMancheAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cFinMancheFinMancheParserRuleCall_12_0 = (RuleCall)cFinMancheAssignment_12.eContents().get(0);
		private final Assignment cThreeHandsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final Keyword cThreeHandsThreeHandsKeyword_13_0 = (Keyword)cThreeHandsAssignment_13.eContents().get(0);
		private final Assignment cThreePilesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final Keyword cThreePilesThreePilesKeyword_14_0 = (Keyword)cThreePilesAssignment_14.eContents().get(0);
		private final Assignment cSpecialCardAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cSpecialCardSpecialCardParserRuleCall_15_0 = (RuleCall)cSpecialCardAssignment_15.eContents().get(0);
		private final Assignment cGameOverAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cGameOverGameOverParserRuleCall_16_0 = (RuleCall)cGameOverAssignment_16.eContents().get(0);
		
		//Uno_Classic:
		//	'Uno Classic : '+ unoChallenge?="UnoChallenge"* carte0_7?="Carte0_7"* carteIdentique?=CarteIdentique*
		//	cumulAjout?=CumulAjout+ suite?=Suite* pioche?="Pioche"* more4?="More4"* tempsLimite?="tempsLimite"*
		//	mauvaiseCarte?="mauvaiseCarte"* equipe?="equipe"* carteVisibles?="CarteVisibles"+ finManche?=FinManche*
		//	threeHands?="ThreeHands"* threePiles?="ThreePiles"* specialCard?=SpecialCard* gameOver=GameOver;
		@Override public ParserRule getRule() { return rule; }
		
		//'Uno Classic : '+ unoChallenge?="UnoChallenge"* carte0_7?="Carte0_7"* carteIdentique?=CarteIdentique*
		//cumulAjout?=CumulAjout+ suite?=Suite* pioche?="Pioche"* more4?="More4"* tempsLimite?="tempsLimite"*
		//mauvaiseCarte?="mauvaiseCarte"* equipe?="equipe"* carteVisibles?="CarteVisibles"+ finManche?=FinManche*
		//threeHands?="ThreeHands"* threePiles?="ThreePiles"* specialCard?=SpecialCard* gameOver=GameOver
		public Group getGroup() { return cGroup; }
		
		//'Uno Classic : '+
		public Keyword getUnoClassicKeyword_0() { return cUnoClassicKeyword_0; }
		
		//unoChallenge?="UnoChallenge"*
		public Assignment getUnoChallengeAssignment_1() { return cUnoChallengeAssignment_1; }
		
		//"UnoChallenge"
		public Keyword getUnoChallengeUnoChallengeKeyword_1_0() { return cUnoChallengeUnoChallengeKeyword_1_0; }
		
		//carte0_7?="Carte0_7"*
		public Assignment getCarte0_7Assignment_2() { return cCarte0_7Assignment_2; }
		
		//"Carte0_7"
		public Keyword getCarte0_7Carte0_7Keyword_2_0() { return cCarte0_7Carte0_7Keyword_2_0; }
		
		//carteIdentique?=CarteIdentique*
		public Assignment getCarteIdentiqueAssignment_3() { return cCarteIdentiqueAssignment_3; }
		
		//CarteIdentique
		public RuleCall getCarteIdentiqueCarteIdentiqueParserRuleCall_3_0() { return cCarteIdentiqueCarteIdentiqueParserRuleCall_3_0; }
		
		//cumulAjout?=CumulAjout+
		public Assignment getCumulAjoutAssignment_4() { return cCumulAjoutAssignment_4; }
		
		//CumulAjout
		public RuleCall getCumulAjoutCumulAjoutParserRuleCall_4_0() { return cCumulAjoutCumulAjoutParserRuleCall_4_0; }
		
		//suite?=Suite*
		public Assignment getSuiteAssignment_5() { return cSuiteAssignment_5; }
		
		//Suite
		public RuleCall getSuiteSuiteParserRuleCall_5_0() { return cSuiteSuiteParserRuleCall_5_0; }
		
		//pioche?="Pioche"*
		public Assignment getPiocheAssignment_6() { return cPiocheAssignment_6; }
		
		//"Pioche"
		public Keyword getPiochePiocheKeyword_6_0() { return cPiochePiocheKeyword_6_0; }
		
		//more4?="More4"*
		public Assignment getMore4Assignment_7() { return cMore4Assignment_7; }
		
		//"More4"
		public Keyword getMore4More4Keyword_7_0() { return cMore4More4Keyword_7_0; }
		
		//tempsLimite?="tempsLimite"*
		public Assignment getTempsLimiteAssignment_8() { return cTempsLimiteAssignment_8; }
		
		//"tempsLimite"
		public Keyword getTempsLimiteTempsLimiteKeyword_8_0() { return cTempsLimiteTempsLimiteKeyword_8_0; }
		
		//mauvaiseCarte?="mauvaiseCarte"*
		public Assignment getMauvaiseCarteAssignment_9() { return cMauvaiseCarteAssignment_9; }
		
		//"mauvaiseCarte"
		public Keyword getMauvaiseCarteMauvaiseCarteKeyword_9_0() { return cMauvaiseCarteMauvaiseCarteKeyword_9_0; }
		
		//equipe?="equipe"*
		public Assignment getEquipeAssignment_10() { return cEquipeAssignment_10; }
		
		//"equipe"
		public Keyword getEquipeEquipeKeyword_10_0() { return cEquipeEquipeKeyword_10_0; }
		
		//carteVisibles?="CarteVisibles"+
		public Assignment getCarteVisiblesAssignment_11() { return cCarteVisiblesAssignment_11; }
		
		//"CarteVisibles"
		public Keyword getCarteVisiblesCarteVisiblesKeyword_11_0() { return cCarteVisiblesCarteVisiblesKeyword_11_0; }
		
		//finManche?=FinManche*
		public Assignment getFinMancheAssignment_12() { return cFinMancheAssignment_12; }
		
		//FinManche
		public RuleCall getFinMancheFinMancheParserRuleCall_12_0() { return cFinMancheFinMancheParserRuleCall_12_0; }
		
		//threeHands?="ThreeHands"*
		public Assignment getThreeHandsAssignment_13() { return cThreeHandsAssignment_13; }
		
		//"ThreeHands"
		public Keyword getThreeHandsThreeHandsKeyword_13_0() { return cThreeHandsThreeHandsKeyword_13_0; }
		
		//threePiles?="ThreePiles"*
		public Assignment getThreePilesAssignment_14() { return cThreePilesAssignment_14; }
		
		//"ThreePiles"
		public Keyword getThreePilesThreePilesKeyword_14_0() { return cThreePilesThreePilesKeyword_14_0; }
		
		//specialCard?=SpecialCard*
		public Assignment getSpecialCardAssignment_15() { return cSpecialCardAssignment_15; }
		
		//SpecialCard
		public RuleCall getSpecialCardSpecialCardParserRuleCall_15_0() { return cSpecialCardSpecialCardParserRuleCall_15_0; }
		
		//gameOver=GameOver
		public Assignment getGameOverAssignment_16() { return cGameOverAssignment_16; }
		
		//GameOver
		public RuleCall getGameOverGameOverParserRuleCall_16_0() { return cGameOverGameOverParserRuleCall_16_0; }
	}
	public class SpecialCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.SpecialCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecialCardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cRouletteKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cShowdownKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cClassiqueKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		
		//SpecialCard:
		//	"SpecialCard : "+ ("Roulette" | "Showdown" | "Classique");
		@Override public ParserRule getRule() { return rule; }
		
		//"SpecialCard : "+ ("Roulette" | "Showdown" | "Classique")
		public Group getGroup() { return cGroup; }
		
		//"SpecialCard : "+
		public Keyword getSpecialCardKeyword_0() { return cSpecialCardKeyword_0; }
		
		//("Roulette" | "Showdown" | "Classique")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//"Roulette"
		public Keyword getRouletteKeyword_1_0() { return cRouletteKeyword_1_0; }
		
		//"Showdown"
		public Keyword getShowdownKeyword_1_1() { return cShowdownKeyword_1_1; }
		
		//"Classique"
		public Keyword getClassiqueKeyword_1_2() { return cClassiqueKeyword_1_2; }
	}
	public class GameOverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.GameOver");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGameOverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAvoir500Keyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cNePasAvoir500Keyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cNombredeManchesGagnSKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		
		//GameOver:
		//	"GameOver : "+ ("Avoir500" | "NePasAvoir500" | "nombredeManchesGagnés");
		@Override public ParserRule getRule() { return rule; }
		
		//"GameOver : "+ ("Avoir500" | "NePasAvoir500" | "nombredeManchesGagnés")
		public Group getGroup() { return cGroup; }
		
		//"GameOver : "+
		public Keyword getGameOverKeyword_0() { return cGameOverKeyword_0; }
		
		//("Avoir500" | "NePasAvoir500" | "nombredeManchesGagnés")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//"Avoir500"
		public Keyword getAvoir500Keyword_1_0() { return cAvoir500Keyword_1_0; }
		
		//"NePasAvoir500"
		public Keyword getNePasAvoir500Keyword_1_1() { return cNePasAvoir500Keyword_1_1; }
		
		//"nombredeManchesGagnés"
		public Keyword getNombredeManchesGagnSKeyword_1_2() { return cNombredeManchesGagnSKeyword_1_2; }
	}
	public class FinMancheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.FinManche");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFinMancheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cReste1CarteKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cAumoins4CartesMemeChiffreKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		
		//FinManche:
		//	"FinManche : "+ ("Reste1Carte" | "Aumoins4CartesMemeChiffre");
		@Override public ParserRule getRule() { return rule; }
		
		//"FinManche : "+ ("Reste1Carte" | "Aumoins4CartesMemeChiffre")
		public Group getGroup() { return cGroup; }
		
		//"FinManche : "+
		public Keyword getFinMancheKeyword_0() { return cFinMancheKeyword_0; }
		
		//("Reste1Carte" | "Aumoins4CartesMemeChiffre")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//"Reste1Carte"
		public Keyword getReste1CarteKeyword_1_0() { return cReste1CarteKeyword_1_0; }
		
		//"Aumoins4CartesMemeChiffre"
		public Keyword getAumoins4CartesMemeChiffreKeyword_1_1() { return cAumoins4CartesMemeChiffreKeyword_1_1; }
	}
	public class CarteIdentiqueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.CarteIdentique");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCarteIdentiQUEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAvecCouleurAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAvecCouleurAvecCouleurKeyword_1_0 = (Keyword)cAvecCouleurAssignment_1.eContents().get(0);
		
		//CarteIdentique:
		//	"CarteIdentiQUE"+ AvecCouleur?="AvecCouleur"?;
		@Override public ParserRule getRule() { return rule; }
		
		//"CarteIdentiQUE"+ AvecCouleur?="AvecCouleur"?
		public Group getGroup() { return cGroup; }
		
		//"CarteIdentiQUE"+
		public Keyword getCarteIdentiQUEKeyword_0() { return cCarteIdentiQUEKeyword_0; }
		
		//AvecCouleur?="AvecCouleur"?
		public Assignment getAvecCouleurAssignment_1() { return cAvecCouleurAssignment_1; }
		
		//"AvecCouleur"
		public Keyword getAvecCouleurAvecCouleurKeyword_1_0() { return cAvecCouleurAvecCouleurKeyword_1_0; }
	}
	public class CumulAjoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.CumulAjout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCumulAjoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPlus2Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPlus2PLus2Keyword_1_0 = (Keyword)cPlus2Assignment_1.eContents().get(0);
		private final Assignment cPlus4Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cPlus4PLus4Keyword_2_0 = (Keyword)cPlus4Assignment_2.eContents().get(0);
		
		//CumulAjout:
		//	"CumulAjout"+ plus2?="PLus2"* plus4?="PLus4"?;
		@Override public ParserRule getRule() { return rule; }
		
		//"CumulAjout"+ plus2?="PLus2"* plus4?="PLus4"?
		public Group getGroup() { return cGroup; }
		
		//"CumulAjout"+
		public Keyword getCumulAjoutKeyword_0() { return cCumulAjoutKeyword_0; }
		
		//plus2?="PLus2"*
		public Assignment getPlus2Assignment_1() { return cPlus2Assignment_1; }
		
		//"PLus2"
		public Keyword getPlus2PLus2Keyword_1_0() { return cPlus2PLus2Keyword_1_0; }
		
		//plus4?="PLus4"?
		public Assignment getPlus4Assignment_2() { return cPlus4Assignment_2; }
		
		//"PLus4"
		public Keyword getPlus4PLus4Keyword_2_0() { return cPlus4PLus4Keyword_2_0; }
	}
	public class SuiteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.Suite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cSuiteKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cSimpleKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cRoyaleKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Suite:
		//	"Suite : "+ "Simple" | "Royale";
		@Override public ParserRule getRule() { return rule; }
		
		//"Suite : "+ "Simple" | "Royale"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"Suite : "+ "Simple"
		public Group getGroup_0() { return cGroup_0; }
		
		//"Suite : "+
		public Keyword getSuiteKeyword_0_0() { return cSuiteKeyword_0_0; }
		
		//"Simple"
		public Keyword getSimpleKeyword_0_1() { return cSimpleKeyword_0_1; }
		
		//"Royale"
		public Keyword getRoyaleKeyword_1() { return cRoyaleKeyword_1; }
	}
	public class UnoOlypiqueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.UnoOlypique");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnoOlympiqueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTribunalPopulaireAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTribunalPopulaireTribunalPopulaireKeyword_1_0 = (Keyword)cTribunalPopulaireAssignment_1.eContents().get(0);
		private final Assignment cDistributionAleatoireAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cDistributionAleatoireDistributionAleatoireKeyword_2_0 = (Keyword)cDistributionAleatoireAssignment_2.eContents().get(0);
		private final Assignment cSensDefiniAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cSensDefiniSensDefiniKeyword_3_0 = (Keyword)cSensDefiniAssignment_3.eContents().get(0);
		private final Assignment cChangementDonneurAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cChangementDonneurChangementDonneurKeyword_4_0 = (Keyword)cChangementDonneurAssignment_4.eContents().get(0);
		private final Assignment cVueDesCartesApres1erPoseAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cVueDesCartesApres1erPoseVueDesCartesApres1erPoseKeyword_5_0 = (Keyword)cVueDesCartesApres1erPoseAssignment_5.eContents().get(0);
		private final Assignment cDonneurPremieroseAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cDonneurPremieroseDonneurPremieroseKeyword_6_0 = (Keyword)cDonneurPremieroseAssignment_6.eContents().get(0);
		private final Assignment cJeuRapideAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cJeuRapideJeuRapideKeyword_7_0 = (Keyword)cJeuRapideAssignment_7.eContents().get(0);
		private final Assignment cInterceptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cInterceptionInterceptionKeyword_8_0 = (Keyword)cInterceptionAssignment_8.eContents().get(0);
		private final Assignment cDeuxCartesIdentiquesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cDeuxCartesIdentiquesDeuxCartesIdentiquesKeyword_9_0 = (Keyword)cDeuxCartesIdentiquesAssignment_9.eContents().get(0);
		private final Assignment cDecisionCarteAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cDecisionCarteDecisionCarteKeyword_10_0 = (Keyword)cDecisionCarteAssignment_10.eContents().get(0);
		private final Assignment cSurenchereAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final Keyword cSurenchereSurenchereKeyword_11_0 = (Keyword)cSurenchereAssignment_11.eContents().get(0);
		private final Assignment cCartezeroAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final Keyword cCartezeroCarte0Keyword_12_0 = (Keyword)cCartezeroAssignment_12.eContents().get(0);
		private final Assignment cCarteSeptAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final Keyword cCarteSeptCarte7Keyword_13_0 = (Keyword)cCarteSeptAssignment_13.eContents().get(0);
		private final Assignment cCarte2Assignment_14 = (Assignment)cGroup.eContents().get(14);
		private final Keyword cCarte2Carte2Keyword_14_0 = (Keyword)cCarte2Assignment_14.eContents().get(0);
		private final Assignment cValeurCarteAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final Keyword cValeurCarteValeurCarteKeyword_15_0 = (Keyword)cValeurCarteAssignment_15.eContents().get(0);
		
		//UnoOlypique:
		//	'UnoOlympique : '+ TribunalPopulaire="TribunalPopulaire"+ DistributionAleatoire="DistributionAleatoire"+
		//	SensDefini="SensDefini"+ ChangementDonneur="ChangementDonneur"+ VueDesCartesApres1erPose="VueDesCartesApres1erPose"+
		//	DonneurPremierose="DonneurPremierose"+ JeuRapide="JeuRapide"+ Interception="Interception"+
		//	DeuxCartesIdentiques="DeuxCartesIdentiques"+ DecisionCarte="DecisionCarte"+ Surenchere="Surenchere"+
		//	cartezero?="Carte0"* CarteSept?="Carte7"* Carte2="Carte2"+ ValeurCarte="ValeurCarte";
		@Override public ParserRule getRule() { return rule; }
		
		//'UnoOlympique : '+ TribunalPopulaire="TribunalPopulaire"+ DistributionAleatoire="DistributionAleatoire"+
		//SensDefini="SensDefini"+ ChangementDonneur="ChangementDonneur"+ VueDesCartesApres1erPose="VueDesCartesApres1erPose"+
		//DonneurPremierose="DonneurPremierose"+ JeuRapide="JeuRapide"+ Interception="Interception"+
		//DeuxCartesIdentiques="DeuxCartesIdentiques"+ DecisionCarte="DecisionCarte"+ Surenchere="Surenchere"+
		//cartezero?="Carte0"* CarteSept?="Carte7"* Carte2="Carte2"+ ValeurCarte="ValeurCarte"
		public Group getGroup() { return cGroup; }
		
		//'UnoOlympique : '+
		public Keyword getUnoOlympiqueKeyword_0() { return cUnoOlympiqueKeyword_0; }
		
		//TribunalPopulaire="TribunalPopulaire"+
		public Assignment getTribunalPopulaireAssignment_1() { return cTribunalPopulaireAssignment_1; }
		
		//"TribunalPopulaire"
		public Keyword getTribunalPopulaireTribunalPopulaireKeyword_1_0() { return cTribunalPopulaireTribunalPopulaireKeyword_1_0; }
		
		//DistributionAleatoire="DistributionAleatoire"+
		public Assignment getDistributionAleatoireAssignment_2() { return cDistributionAleatoireAssignment_2; }
		
		//"DistributionAleatoire"
		public Keyword getDistributionAleatoireDistributionAleatoireKeyword_2_0() { return cDistributionAleatoireDistributionAleatoireKeyword_2_0; }
		
		//SensDefini="SensDefini"+
		public Assignment getSensDefiniAssignment_3() { return cSensDefiniAssignment_3; }
		
		//"SensDefini"
		public Keyword getSensDefiniSensDefiniKeyword_3_0() { return cSensDefiniSensDefiniKeyword_3_0; }
		
		//ChangementDonneur="ChangementDonneur"+
		public Assignment getChangementDonneurAssignment_4() { return cChangementDonneurAssignment_4; }
		
		//"ChangementDonneur"
		public Keyword getChangementDonneurChangementDonneurKeyword_4_0() { return cChangementDonneurChangementDonneurKeyword_4_0; }
		
		//VueDesCartesApres1erPose="VueDesCartesApres1erPose"+
		public Assignment getVueDesCartesApres1erPoseAssignment_5() { return cVueDesCartesApres1erPoseAssignment_5; }
		
		//"VueDesCartesApres1erPose"
		public Keyword getVueDesCartesApres1erPoseVueDesCartesApres1erPoseKeyword_5_0() { return cVueDesCartesApres1erPoseVueDesCartesApres1erPoseKeyword_5_0; }
		
		//DonneurPremierose="DonneurPremierose"+
		public Assignment getDonneurPremieroseAssignment_6() { return cDonneurPremieroseAssignment_6; }
		
		//"DonneurPremierose"
		public Keyword getDonneurPremieroseDonneurPremieroseKeyword_6_0() { return cDonneurPremieroseDonneurPremieroseKeyword_6_0; }
		
		//JeuRapide="JeuRapide"+
		public Assignment getJeuRapideAssignment_7() { return cJeuRapideAssignment_7; }
		
		//"JeuRapide"
		public Keyword getJeuRapideJeuRapideKeyword_7_0() { return cJeuRapideJeuRapideKeyword_7_0; }
		
		//Interception="Interception"+
		public Assignment getInterceptionAssignment_8() { return cInterceptionAssignment_8; }
		
		//"Interception"
		public Keyword getInterceptionInterceptionKeyword_8_0() { return cInterceptionInterceptionKeyword_8_0; }
		
		//DeuxCartesIdentiques="DeuxCartesIdentiques"+
		public Assignment getDeuxCartesIdentiquesAssignment_9() { return cDeuxCartesIdentiquesAssignment_9; }
		
		//"DeuxCartesIdentiques"
		public Keyword getDeuxCartesIdentiquesDeuxCartesIdentiquesKeyword_9_0() { return cDeuxCartesIdentiquesDeuxCartesIdentiquesKeyword_9_0; }
		
		//DecisionCarte="DecisionCarte"+
		public Assignment getDecisionCarteAssignment_10() { return cDecisionCarteAssignment_10; }
		
		//"DecisionCarte"
		public Keyword getDecisionCarteDecisionCarteKeyword_10_0() { return cDecisionCarteDecisionCarteKeyword_10_0; }
		
		//Surenchere="Surenchere"+
		public Assignment getSurenchereAssignment_11() { return cSurenchereAssignment_11; }
		
		//"Surenchere"
		public Keyword getSurenchereSurenchereKeyword_11_0() { return cSurenchereSurenchereKeyword_11_0; }
		
		//cartezero?="Carte0"*
		public Assignment getCartezeroAssignment_12() { return cCartezeroAssignment_12; }
		
		//"Carte0"
		public Keyword getCartezeroCarte0Keyword_12_0() { return cCartezeroCarte0Keyword_12_0; }
		
		//CarteSept?="Carte7"*
		public Assignment getCarteSeptAssignment_13() { return cCarteSeptAssignment_13; }
		
		//"Carte7"
		public Keyword getCarteSeptCarte7Keyword_13_0() { return cCarteSeptCarte7Keyword_13_0; }
		
		//Carte2="Carte2"+
		public Assignment getCarte2Assignment_14() { return cCarte2Assignment_14; }
		
		//"Carte2"
		public Keyword getCarte2Carte2Keyword_14_0() { return cCarte2Carte2Keyword_14_0; }
		
		//ValeurCarte="ValeurCarte"
		public Assignment getValeurCarteAssignment_15() { return cValeurCarteAssignment_15; }
		
		//"ValeurCarte"
		public Keyword getValeurCarteValeurCarteKeyword_15_0() { return cValeurCarteValeurCarteKeyword_15_0; }
	}
	public class UnoWizzElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.UnoWizz");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnoWizzKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPresquUnoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPresquUnoPresquUnoKeyword_1_0 = (Keyword)cPresquUnoAssignment_1.eContents().get(0);
		private final Assignment cChiffreMoinsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cChiffreMoinsChiffreMoinsKeyword_2_0 = (Keyword)cChiffreMoinsAssignment_2.eContents().get(0);
		private final Assignment cCouleurMoinsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cCouleurMoinsCouleurMoinsKeyword_3_0 = (Keyword)cCouleurMoinsAssignment_3.eContents().get(0);
		private final Assignment cCarteRougeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cCarteRougeCarteRougeKeyword_4_0 = (Keyword)cCarteRougeAssignment_4.eContents().get(0);
		private final Keyword cCarteBleueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEchangeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cMainVisibleKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cUnoWizzKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cWarKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//UnoWizz:
		//	"UnoWizz : "+ presquUno="presquUno,"+ chiffreMoins="chiffreMoins,"+ couleurMoins="couleurMoins,"+
		//	carteRouge="carteRouge"+ "carteBleue"+ "echange"+ "mainVisible"+ "unoWizz"+ "War";
		@Override public ParserRule getRule() { return rule; }
		
		//"UnoWizz : "+ presquUno="presquUno,"+ chiffreMoins="chiffreMoins,"+ couleurMoins="couleurMoins,"+
		//carteRouge="carteRouge"+ "carteBleue"+ "echange"+ "mainVisible"+ "unoWizz"+ "War"
		public Group getGroup() { return cGroup; }
		
		//"UnoWizz : "+
		public Keyword getUnoWizzKeyword_0() { return cUnoWizzKeyword_0; }
		
		//presquUno="presquUno,"+
		public Assignment getPresquUnoAssignment_1() { return cPresquUnoAssignment_1; }
		
		//"presquUno,"
		public Keyword getPresquUnoPresquUnoKeyword_1_0() { return cPresquUnoPresquUnoKeyword_1_0; }
		
		//chiffreMoins="chiffreMoins,"+
		public Assignment getChiffreMoinsAssignment_2() { return cChiffreMoinsAssignment_2; }
		
		//"chiffreMoins,"
		public Keyword getChiffreMoinsChiffreMoinsKeyword_2_0() { return cChiffreMoinsChiffreMoinsKeyword_2_0; }
		
		//couleurMoins="couleurMoins,"+
		public Assignment getCouleurMoinsAssignment_3() { return cCouleurMoinsAssignment_3; }
		
		//"couleurMoins,"
		public Keyword getCouleurMoinsCouleurMoinsKeyword_3_0() { return cCouleurMoinsCouleurMoinsKeyword_3_0; }
		
		//carteRouge="carteRouge"+
		public Assignment getCarteRougeAssignment_4() { return cCarteRougeAssignment_4; }
		
		//"carteRouge"
		public Keyword getCarteRougeCarteRougeKeyword_4_0() { return cCarteRougeCarteRougeKeyword_4_0; }
		
		//"carteBleue"+
		public Keyword getCarteBleueKeyword_5() { return cCarteBleueKeyword_5; }
		
		//"echange"+
		public Keyword getEchangeKeyword_6() { return cEchangeKeyword_6; }
		
		//"mainVisible"+
		public Keyword getMainVisibleKeyword_7() { return cMainVisibleKeyword_7; }
		
		//"unoWizz"+
		public Keyword getUnoWizzKeyword_8() { return cUnoWizzKeyword_8; }
		
		//"War"
		public Keyword getWarKeyword_9() { return cWarKeyword_9; }
	}
	public class UnoRapidoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.unotext.UnoText.UnoRapido");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnoRapidoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPiocheKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cConfusionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDefenseKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRapidoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cCarteUnoKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UnoRapido:
		//	"UnoRapido"+ "Pioche"+ "Confusion"+ "Defense"+ "Rapido"+ "CarteUno";
		@Override public ParserRule getRule() { return rule; }
		
		//"UnoRapido"+ "Pioche"+ "Confusion"+ "Defense"+ "Rapido"+ "CarteUno"
		public Group getGroup() { return cGroup; }
		
		//"UnoRapido"+
		public Keyword getUnoRapidoKeyword_0() { return cUnoRapidoKeyword_0; }
		
		//"Pioche"+
		public Keyword getPiocheKeyword_1() { return cPiocheKeyword_1; }
		
		//"Confusion"+
		public Keyword getConfusionKeyword_2() { return cConfusionKeyword_2; }
		
		//"Defense"+
		public Keyword getDefenseKeyword_3() { return cDefenseKeyword_3; }
		
		//"Rapido"+
		public Keyword getRapidoKeyword_4() { return cRapidoKeyword_4; }
		
		//"CarteUno"
		public Keyword getCarteUnoKeyword_5() { return cCarteUnoKeyword_5; }
	}
	
	
	private final UnoElements pUno;
	private final Uno_RuleElements pUno_Rule;
	private final NombreJoueursElements pNombreJoueurs;
	private final DeuxElements pDeux;
	private final Uno_ClassicElements pUno_Classic;
	private final SpecialCardElements pSpecialCard;
	private final GameOverElements pGameOver;
	private final FinMancheElements pFinManche;
	private final CarteIdentiqueElements pCarteIdentique;
	private final CumulAjoutElements pCumulAjout;
	private final SuiteElements pSuite;
	private final UnoOlypiqueElements pUnoOlypique;
	private final UnoWizzElements pUnoWizz;
	private final UnoRapidoElements pUnoRapido;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UnoTextGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pUno = new UnoElements();
		this.pUno_Rule = new Uno_RuleElements();
		this.pNombreJoueurs = new NombreJoueursElements();
		this.pDeux = new DeuxElements();
		this.pUno_Classic = new Uno_ClassicElements();
		this.pSpecialCard = new SpecialCardElements();
		this.pGameOver = new GameOverElements();
		this.pFinManche = new FinMancheElements();
		this.pCarteIdentique = new CarteIdentiqueElements();
		this.pCumulAjout = new CumulAjoutElements();
		this.pSuite = new SuiteElements();
		this.pUnoOlypique = new UnoOlypiqueElements();
		this.pUnoWizz = new UnoWizzElements();
		this.pUnoRapido = new UnoRapidoElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.unotext.UnoText".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Uno:
	//	uno+=Uno_Rule nombreJoueur+=NombreJoueurs;
	public UnoElements getUnoAccess() {
		return pUno;
	}
	
	public ParserRule getUnoRule() {
		return getUnoAccess().getRule();
	}
	
	//Uno_Rule:
	//	Uno_Classic | UnoOlypique | UnoWizz | UnoRapido;
	public Uno_RuleElements getUno_RuleAccess() {
		return pUno_Rule;
	}
	
	public ParserRule getUno_RuleRule() {
		return getUno_RuleAccess().getRule();
	}
	
	//NombreJoueurs:
	//	'Nombre de joueur : '+ (Deux | "Trois" | "Quatre" | "Cinq" | "Six" | "Sept" | "Huit");
	public NombreJoueursElements getNombreJoueursAccess() {
		return pNombreJoueurs;
	}
	
	public ParserRule getNombreJoueursRule() {
		return getNombreJoueursAccess().getRule();
	}
	
	//Deux:
	//	"Deux : Inverser/Passer_Tour";
	public DeuxElements getDeuxAccess() {
		return pDeux;
	}
	
	public ParserRule getDeuxRule() {
		return getDeuxAccess().getRule();
	}
	
	//Uno_Classic:
	//	'Uno Classic : '+ unoChallenge?="UnoChallenge"* carte0_7?="Carte0_7"* carteIdentique?=CarteIdentique*
	//	cumulAjout?=CumulAjout+ suite?=Suite* pioche?="Pioche"* more4?="More4"* tempsLimite?="tempsLimite"*
	//	mauvaiseCarte?="mauvaiseCarte"* equipe?="equipe"* carteVisibles?="CarteVisibles"+ finManche?=FinManche*
	//	threeHands?="ThreeHands"* threePiles?="ThreePiles"* specialCard?=SpecialCard* gameOver=GameOver;
	public Uno_ClassicElements getUno_ClassicAccess() {
		return pUno_Classic;
	}
	
	public ParserRule getUno_ClassicRule() {
		return getUno_ClassicAccess().getRule();
	}
	
	//SpecialCard:
	//	"SpecialCard : "+ ("Roulette" | "Showdown" | "Classique");
	public SpecialCardElements getSpecialCardAccess() {
		return pSpecialCard;
	}
	
	public ParserRule getSpecialCardRule() {
		return getSpecialCardAccess().getRule();
	}
	
	//GameOver:
	//	"GameOver : "+ ("Avoir500" | "NePasAvoir500" | "nombredeManchesGagnés");
	public GameOverElements getGameOverAccess() {
		return pGameOver;
	}
	
	public ParserRule getGameOverRule() {
		return getGameOverAccess().getRule();
	}
	
	//FinManche:
	//	"FinManche : "+ ("Reste1Carte" | "Aumoins4CartesMemeChiffre");
	public FinMancheElements getFinMancheAccess() {
		return pFinManche;
	}
	
	public ParserRule getFinMancheRule() {
		return getFinMancheAccess().getRule();
	}
	
	//CarteIdentique:
	//	"CarteIdentiQUE"+ AvecCouleur?="AvecCouleur"?;
	public CarteIdentiqueElements getCarteIdentiqueAccess() {
		return pCarteIdentique;
	}
	
	public ParserRule getCarteIdentiqueRule() {
		return getCarteIdentiqueAccess().getRule();
	}
	
	//CumulAjout:
	//	"CumulAjout"+ plus2?="PLus2"* plus4?="PLus4"?;
	public CumulAjoutElements getCumulAjoutAccess() {
		return pCumulAjout;
	}
	
	public ParserRule getCumulAjoutRule() {
		return getCumulAjoutAccess().getRule();
	}
	
	//Suite:
	//	"Suite : "+ "Simple" | "Royale";
	public SuiteElements getSuiteAccess() {
		return pSuite;
	}
	
	public ParserRule getSuiteRule() {
		return getSuiteAccess().getRule();
	}
	
	//UnoOlypique:
	//	'UnoOlympique : '+ TribunalPopulaire="TribunalPopulaire"+ DistributionAleatoire="DistributionAleatoire"+
	//	SensDefini="SensDefini"+ ChangementDonneur="ChangementDonneur"+ VueDesCartesApres1erPose="VueDesCartesApres1erPose"+
	//	DonneurPremierose="DonneurPremierose"+ JeuRapide="JeuRapide"+ Interception="Interception"+
	//	DeuxCartesIdentiques="DeuxCartesIdentiques"+ DecisionCarte="DecisionCarte"+ Surenchere="Surenchere"+
	//	cartezero?="Carte0"* CarteSept?="Carte7"* Carte2="Carte2"+ ValeurCarte="ValeurCarte";
	public UnoOlypiqueElements getUnoOlypiqueAccess() {
		return pUnoOlypique;
	}
	
	public ParserRule getUnoOlypiqueRule() {
		return getUnoOlypiqueAccess().getRule();
	}
	
	//UnoWizz:
	//	"UnoWizz : "+ presquUno="presquUno,"+ chiffreMoins="chiffreMoins,"+ couleurMoins="couleurMoins,"+
	//	carteRouge="carteRouge"+ "carteBleue"+ "echange"+ "mainVisible"+ "unoWizz"+ "War";
	public UnoWizzElements getUnoWizzAccess() {
		return pUnoWizz;
	}
	
	public ParserRule getUnoWizzRule() {
		return getUnoWizzAccess().getRule();
	}
	
	//UnoRapido:
	//	"UnoRapido"+ "Pioche"+ "Confusion"+ "Defense"+ "Rapido"+ "CarteUno";
	public UnoRapidoElements getUnoRapidoAccess() {
		return pUnoRapido;
	}
	
	public ParserRule getUnoRapidoRule() {
		return getUnoRapidoAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.unotext.unoText.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.unotext.unoText.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.unotext.unoText.UnoTextPackage
 * @generated
 */
public class UnoTextSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static UnoTextPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UnoTextSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = UnoTextPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case UnoTextPackage.UNO:
      {
        Uno uno = (Uno)theEObject;
        T result = caseUno(uno);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case UnoTextPackage.UNO_RULE:
      {
        Uno_Rule uno_Rule = (Uno_Rule)theEObject;
        T result = caseUno_Rule(uno_Rule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case UnoTextPackage.UNO_CLASSIC:
      {
        Uno_Classic uno_Classic = (Uno_Classic)theEObject;
        T result = caseUno_Classic(uno_Classic);
        if (result == null) result = caseUno_Rule(uno_Classic);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case UnoTextPackage.CARTE_IDENTIQUE:
      {
        CarteIdentique carteIdentique = (CarteIdentique)theEObject;
        T result = caseCarteIdentique(carteIdentique);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case UnoTextPackage.CUMUL_AJOUT:
      {
        CumulAjout cumulAjout = (CumulAjout)theEObject;
        T result = caseCumulAjout(cumulAjout);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case UnoTextPackage.UNO_OLYPIQUE:
      {
        UnoOlypique unoOlypique = (UnoOlypique)theEObject;
        T result = caseUnoOlypique(unoOlypique);
        if (result == null) result = caseUno_Rule(unoOlypique);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case UnoTextPackage.UNO_WIZZ:
      {
        UnoWizz unoWizz = (UnoWizz)theEObject;
        T result = caseUnoWizz(unoWizz);
        if (result == null) result = caseUno_Rule(unoWizz);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uno</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uno</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUno(Uno object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uno Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uno Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUno_Rule(Uno_Rule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uno Classic</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uno Classic</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUno_Classic(Uno_Classic object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Carte Identique</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Carte Identique</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCarteIdentique(CarteIdentique object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Cumul Ajout</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Cumul Ajout</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCumulAjout(CumulAjout object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uno Olypique</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uno Olypique</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUnoOlypique(UnoOlypique object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uno Wizz</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uno Wizz</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUnoWizz(UnoWizz object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //UnoTextSwitch

/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.unotext.unoText.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.unotext.unoText.CarteIdentique;
import org.xtext.example.unotext.unoText.UnoTextPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Carte Identique</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.unotext.unoText.impl.CarteIdentiqueImpl#isAvecCouleur <em>Avec Couleur</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CarteIdentiqueImpl extends MinimalEObjectImpl.Container implements CarteIdentique
{
  /**
   * The default value of the '{@link #isAvecCouleur() <em>Avec Couleur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAvecCouleur()
   * @generated
   * @ordered
   */
  protected static final boolean AVEC_COULEUR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAvecCouleur() <em>Avec Couleur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAvecCouleur()
   * @generated
   * @ordered
   */
  protected boolean avecCouleur = AVEC_COULEUR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CarteIdentiqueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UnoTextPackage.Literals.CARTE_IDENTIQUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isAvecCouleur()
  {
    return avecCouleur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAvecCouleur(boolean newAvecCouleur)
  {
    boolean oldAvecCouleur = avecCouleur;
    avecCouleur = newAvecCouleur;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnoTextPackage.CARTE_IDENTIQUE__AVEC_COULEUR, oldAvecCouleur, avecCouleur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UnoTextPackage.CARTE_IDENTIQUE__AVEC_COULEUR:
        return isAvecCouleur();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UnoTextPackage.CARTE_IDENTIQUE__AVEC_COULEUR:
        setAvecCouleur((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UnoTextPackage.CARTE_IDENTIQUE__AVEC_COULEUR:
        setAvecCouleur(AVEC_COULEUR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UnoTextPackage.CARTE_IDENTIQUE__AVEC_COULEUR:
        return avecCouleur != AVEC_COULEUR_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (AvecCouleur: ");
    result.append(avecCouleur);
    result.append(')');
    return result.toString();
  }

} //CarteIdentiqueImpl

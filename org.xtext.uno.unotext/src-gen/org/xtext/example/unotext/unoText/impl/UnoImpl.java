/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.unotext.unoText.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.unotext.unoText.Uno;
import org.xtext.example.unotext.unoText.UnoTextPackage;
import org.xtext.example.unotext.unoText.Uno_Rule;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Uno</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.unotext.unoText.impl.UnoImpl#getUno <em>Uno</em>}</li>
 *   <li>{@link org.xtext.example.unotext.unoText.impl.UnoImpl#getNombreJoueur <em>Nombre Joueur</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UnoImpl extends MinimalEObjectImpl.Container implements Uno
{
  /**
   * The cached value of the '{@link #getUno() <em>Uno</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUno()
   * @generated
   * @ordered
   */
  protected EList<Uno_Rule> uno;

  /**
   * The cached value of the '{@link #getNombreJoueur() <em>Nombre Joueur</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNombreJoueur()
   * @generated
   * @ordered
   */
  protected EList<String> nombreJoueur;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UnoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UnoTextPackage.Literals.UNO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Uno_Rule> getUno()
  {
    if (uno == null)
    {
      uno = new EObjectContainmentEList<Uno_Rule>(Uno_Rule.class, this, UnoTextPackage.UNO__UNO);
    }
    return uno;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getNombreJoueur()
  {
    if (nombreJoueur == null)
    {
      nombreJoueur = new EDataTypeEList<String>(String.class, this, UnoTextPackage.UNO__NOMBRE_JOUEUR);
    }
    return nombreJoueur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UnoTextPackage.UNO__UNO:
        return ((InternalEList<?>)getUno()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UnoTextPackage.UNO__UNO:
        return getUno();
      case UnoTextPackage.UNO__NOMBRE_JOUEUR:
        return getNombreJoueur();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UnoTextPackage.UNO__UNO:
        getUno().clear();
        getUno().addAll((Collection<? extends Uno_Rule>)newValue);
        return;
      case UnoTextPackage.UNO__NOMBRE_JOUEUR:
        getNombreJoueur().clear();
        getNombreJoueur().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UnoTextPackage.UNO__UNO:
        getUno().clear();
        return;
      case UnoTextPackage.UNO__NOMBRE_JOUEUR:
        getNombreJoueur().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UnoTextPackage.UNO__UNO:
        return uno != null && !uno.isEmpty();
      case UnoTextPackage.UNO__NOMBRE_JOUEUR:
        return nombreJoueur != null && !nombreJoueur.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nombreJoueur: ");
    result.append(nombreJoueur);
    result.append(')');
    return result.toString();
  }

} //UnoImpl
